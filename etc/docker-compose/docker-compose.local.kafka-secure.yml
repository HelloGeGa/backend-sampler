version: "3"

# run from project directory
# docker-compose -f ./etc/docker-compose/docker-compose.local.kafka.yml up --build --force-recreate
services:
  kafka-secure:
    container_name: bs-kafka
    # https://hub.docker.com/r/bitnami/kafka
    # based on debian
    image: bitnami/kafka:3.5.1
    ports:
      - 9092:9092
      - 9093:9093
      - 9094:9094
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker

      KAFKA_CFG_LISTENERS: CONTROLLER://:9093,SASL_SSL://:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,SASL_SSL:SASL_SSL
      # FIXME: advertised listeners host
      KAFKA_CFG_ADVERTISED_LISTENERS: SASL_SSL://192.168.0.181:9094
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@bs-kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SUPER_USERS: "User:ANONYMOUS;User:admin"
      # KRaft authorizer:
      KAFKA_CFG_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      # Zookeeper authorizer:
      # KAFKA_CFG_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer

      # SSL
      # /etc/config/kafka
      KAFKA_CFG_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/kafka.keystore.jks
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: kafka-server-pass
      KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/kafka.truststore.jks
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: kafka-server-pass
      KAFKA_OPTS: "-Dssl.truststore.location=/bitnami/kafka/config/certs/kafka.truststore.jks -Dssl.truststore.password=kafka-server-pass -Dssl.keystore.location=/bitnami/kafka/config/certs/kafka.keystore.jks -Dssl.keystore.password=kafka-server-pass"

      # Inter-broker protocol
      KAFKA_CFG_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL

      # SASL/PLAIN
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      # Hozzáférés tiltása, ha nincs ACL
      KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"

      KAFKA_CLIENT_USERS: admin,kafka-client
      KAFKA_CLIENT_PASSWORDS: admin-secret,kafka-client-secret
      KAFKA_CONTROLLER_USER: controller_user
      KAFKA_CONTROLLER_PASSWORD: controller_password
      KAFKA_INTER_BROKER_USER: controller_user
      KAFKA_INTER_BROKER_PASSWORD: controller_password
      KAFKA_CERTIFICATE_PASSWORD: kafka-server-pass
      KAFKA_TLS_TYPE: JKS # vagy PEM

    volumes:
      - bs-kafka-persistence:/bitnami/kafka
      - ../config/kafka/kafka.server.keystore.jks:/bitnami/kafka/config/certs/kafka.keystore.jks
      - ../config/kafka/kafka.server.truststore.jks:/bitnami/kafka/config/certs/kafka.truststore.jks
      # kafka-acls.sh --bootstrap-server localhost:9094 --list --command-config /bitnami/kafka/config/client.properties
      # kafka-acls.sh --bootstrap-server localhost:9094 --command-config /bitnami/kafka/config/client.properties --add --allow-principal User:kafka-client --operation Read --group '*'
      # kafka-acls.sh --bootstrap-server localhost:9094 --command-config /bitnami/kafka/config/client.properties --add --allow-principal User:kafka-client --operation Read --topic testing
      # kafka-acls.sh --bootstrap-server localhost:9094 --command-config /bitnami/kafka/config/client.properties --add --allow-principal User:kafka-client --operation Write --topic testing
      - ../config/kafka/client.properties:/bitnami/kafka/config/client.properties
      # /etc/config/kafka/client.properties hivatkozik erre:
      - ../config/kafka/client.truststore.jks:/bitnami/kafka/config/certs/client.truststore.jks
  kafka-ui:
    container_name: bs-kafka-ui
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - 9080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      # https://docs.kafka-ui.provectus.io/configuration/configuration-file
      KAFKA_CLUSTERS_0_NAME: bs-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: bs-kafka:9092
volumes:
  bs-kafka-persistence:
    name: bs-kafka-persistence
networks:
  default:
    external:
      # if it could not be found on compose up, then execute: docker network create bs-local-network
      name: bs-local-network
